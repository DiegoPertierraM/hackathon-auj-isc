// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  name     String
  password String
  email    String     @unique
  phone    String?    @unique
  tasks    Task[]
  created  DateTime   @default(now())
  updated  DateTime   @updatedAt
  UserTask UserTask[]
}

model Participant {
  id      Int      @id @default(autoincrement())
  name    String
  email   String   @unique
  ticket  Int
  created DateTime @default(now())
  updated DateTime @updatedAt
}

model Task {
  id             Int        @id @default(autoincrement())
  title          String
  description    String
  taskDate       DateTime
  notification   DateTime?  @default(now())
  expirationDate DateTime
  created        DateTime   @default(now())
  updated        DateTime   @updatedAt
  user           User[]
  UserTask       UserTask[]
}

model Opportunity {
  id          Int      @id @default(autoincrement())
  title       String
  name        String
  description String
  status      Status   @default(new)
  created     DateTime @default(now())
  updated     DateTime @updatedAt
}

enum Status {
  new
  inProgress
  closed
}

model Collaborators {
  id      Int      @id @default(autoincrement())
  name    String
  email   String   @unique
  phone   String   @unique
  company String
  created DateTime @default(now())
  updated DateTime @updatedAt
}

model UserTask {
  userId Int
  taskId Int

  user User @relation(fields: [userId], references: [id])
  task Task @relation(fields: [taskId], references: [id])

  @@id([userId, taskId])
}
